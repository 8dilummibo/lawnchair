name: Release update
on:
  workflow_dispatch:
    inputs:
      artifactName:
        description: Artifact name
        type: string
        required: true
      tagName:
        description: Tag name
        type: string
        required: true
      prerelease:
        description: Prerelease
        type: boolean
        required: true
jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.3.4
        with:
          submodules: true
      - name: Restore Gradle cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Set up Java 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: Grant execution permission to Gradle Wrapper
        run: chmod +x gradlew
      - name: Build release APK
        run: ./gradlew assembleLawnWithQuickstepRelease
      - name: Sign release APK
        uses: r0adkll/sign-android-release@v1
        id: sign-release-apk
        with:
          releaseDirectory: build/outputs/apk/lawnWithQuickstep/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Rename artifact
        continue-on-error: true
        run: mv "${{ steps.sign-release-apk.outputs.signedReleaseFile }}" "${{ github.event.inputs.artifactName }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Release APK
          path: ${{ github.event.inputs.artifactName }}
  publish-github-release:
    runs-on: ubuntu-latest
    needs: build-release-apk
    permissions:
      contents: write
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: Release APK
        path: artifacts/release-apk
    - name: Publish GitHub release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tagName }}
        prerelease: ${{ github.events.inputs.prerelease }}
        draft: true
        body_path: ${{ github.workspace }}/GITHUB_CHANGELOG.md
        files: artifacts/release-apk${{ github.event.inputs.artifactName }}
  publish-telegram-update-post:
    runs-on: ubuntu-latest
    needs: build-release-apk
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Release APK
          path: artifacts/release-apk
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Publish Telegram update post
        run: python ci.py
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_CI_BOT_TOKEN }}
          ARTIFACT_DIRECTORY: artifacts/release-apk
          TELEGRAM_NEWS_CHANNEL_ID: ${{ secrets.TELEGRAM_NEWS_CHANNEL_ID }}
          ACTION: update_announcement
